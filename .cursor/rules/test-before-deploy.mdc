
# Test Before Deploy Rule

## ‚ö†Ô∏è CRITICAL: Never Deploy or Commit Without Local Testing

### Pre-Deployment Checklist
1. **Test locally FIRST** using Vite dev server (`npm run dev`)
2. **Build and verify** the dist/ output (`npm run build`)
3. **Check all pages** - main page AND legal pages (privacy, terms, refunds)
4. **Verify assets load** - images, icons, styles, JavaScript functionality
5. **Test interactive elements** - buttons, toggles, forms, navigation

### Testing Commands (Run in Order)
```bash
# 1. Start local development server
npm run dev

# 2. Test in browser at http://localhost:8000
# - Check main page functionality
# - Navigate to privacy.html, terms.html, refunds.html
# - Verify social media icons appear
# - Test ticket toggle button
# - Check background colors match brand (#482124)

# 3. Build for production
npm run build

# 4. Only AFTER local testing passes:
./deploy.sh
git add .
git commit -m "descriptive message"
git push origin main
```

### What to Test Locally
- ‚úÖ **Main page**: All features work, images load, countdown displays
- ‚úÖ **Legal pages**: Proper background color, social media icons visible
- ‚úÖ **Interactive elements**: Ticket toggle, card flips, question forms
- ‚úÖ **Assets**: WebP images load with fallbacks, favicons appear
- ‚úÖ **Console**: No JavaScript errors in browser dev tools

### Common Issues to Catch Locally
- Missing social media icons (Facebook, Instagram)
- Wrong background colors (gray instead of brand brown #482124)
- 404 errors for images or assets
- JavaScript errors preventing functionality
- Broken responsive layouts on mobile

### Emergency Stop Signs
üõë **STOP and test locally if you see:**
- Console errors in browser dev tools
- Missing icons or broken styling
- Asset 404 errors in network tab
- Any visual differences from expected design
- Functionality not working as expected

### Remember
**Local testing catches 90% of issues before they reach production. Always test locally first - it saves time and prevents broken deployments.**

## üö® CRITICAL: Vite Build Verification

### Vite Script Tag Placement Rule
**ALWAYS place script tags in the `<head>` section for multi-page builds**

‚ùå **Wrong**: Script tag at end of `<body>`
```html
</body>
<script type="module" src="script.js"></script>
</html>
```

‚úÖ **Correct**: Script tag in `<head>`
```html
<head>
  <!-- other head content -->
  <script type="module" src="script.js"></script>
</head>
```

### Build Verification Checklist
**After `npm run build`, ALWAYS verify:**

1. **Check built HTML files** in `dist/` folder:
   ```bash
   # Verify script tags are included in built HTML
   grep -n "script.*src.*assets" dist/index.html
   grep -n "script.*src.*assets" dist/privacy.html
   ```

2. **Verify JavaScript files exist** in `dist/assets/`:
   ```bash
   ls -la dist/assets/
   # Should see: main-*.js, guests-*.js, vendor-lucide-*.js, etc.
   ```

3. **Test built files locally**:
   ```bash
   # Serve the dist folder locally
   npx serve dist
   # Then test in browser at http://localhost:3000
   ```

### Critical Failure Points
- **Script tags missing from built HTML** = JavaScript won't work in production
- **Vite not processing script tags** = Silent failure that only appears in production
- **Inconsistent script placement** = Some pages work, others don't

### Post-Deployment Verification
**After deployment, immediately test:**
- Ticket toggle button functionality
- Card flip animations
- Social media icons
- All interactive elements

### Cost of Failure
**This rule exists because:**
- Broken deployments cost sales
- Users can't purchase tickets if JavaScript doesn't work
- Production issues are harder to debug than local issues
- Reputation damage from broken functionality

**Remember: A few minutes of local testing saves hours of debugging and lost revenue.**

### Remember
**Local testing catches 90% of issues before they reach production. Always test locally first - it saves time and prevents broken deployments.**